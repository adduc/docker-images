---
name: Gather Metadata

inputs:
  directory:
    description: 'Directory where the Makefile is located'
    required: true
outputs:
  is_image:
    description: 'Is this directory an image?'
    value: ${{ steps.gather-metadata.outputs.is_image }}
  list:
    description: 'List of image variants in this directory'
    value: ${{ steps.gather-metadata.outputs.list }}
  list_base:
    description: 'List of base image directories in this directory'
    value: ${{ steps.gather-metadata.outputs.list_base }}
  list_baseless:
    description: 'List of non-base image directories in this directory'
    value: ${{ steps.gather-metadata.outputs.list_baseless }}
  tag_prefix:
    description: 'Tag prefix for the images'
    value: ${{ steps.gather-metadata.outputs.tag_prefix }}

runs:
  using: composite
  steps:
      - shell: bash
        run: |
          echo GITHUB_HEAD_REF=${{ github.head_ref }}
          echo GITHUB_REF=${{ github.ref }}
          echo TAG_PREFIX=$TAG_PREFIX
          echo GITHUB_REF_NAME=${{ github.ref_name }}
          echo GITHUB_REF=${{ github.ref }}

      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare .env file
        shell: bash
        run: |
          set -o pipefail -o errexit -o nounset
          cp .ci.env .env

      - name: Gather Metadata
        id: gather-metadata
        shell: bash
        run: |
          set -o pipefail -o errexit -o nounset
          cd ${{ inputs.directory }}
          [ -f Dockerfile ] && IS_IMAGE="true" || IS_IMAGE="false"
          [ "${{ github.ref }}" == "refs/heads/main" ] || tag_prefix="${{ github.head_ref || github.ref_name }}-"

          echo "is_image=$IS_IMAGE" | tee -a $GITHUB_OUTPUT
          echo "list=$(make list | jq -R -c 'split(" ")')" | tee -a $GITHUB_OUTPUT
          echo "list_base=$(make list-base | jq -R -c 'split(" ")')" | tee -a $GITHUB_OUTPUT
          echo "list_baseless=$(make list-baseless | jq -R -c 'split(" ")')" | tee -a $GITHUB_OUTPUT
          echo "tag_prefix=${tag_prefix:-}" | tee -a $GITHUB_OUTPUT
