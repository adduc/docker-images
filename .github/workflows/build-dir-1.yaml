---
##
# This is a GitHub Actions workflow that builds Docker images
##

name: Build

on:
  push:

# Ensure that there is only ever one build running at a time for a given
# branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gather-metadata:
    runs-on: ubuntu-24.04
    outputs:
      is_image: ${{ steps.gather-metadata.outputs.is_image }}
      list: ${{ steps.gather-metadata.outputs.list }}
      list_base: ${{ steps.gather-metadata.outputs.list_base }}
      list_baseless: ${{ steps.gather-metadata.outputs.list_baseless }}
      tag_prefix: ${{ steps.gather-metadata.outputs.tag_prefix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/gather-metadata
        id: gather-metadata
        with:
          directory: .

  build-base:
    needs: gather-metadata
    if: needs.gather-metadata.outputs.is_image == 'false' && needs.gather-metadata.outputs.list_base != '[]'
    strategy:
      fail-fast: false
      matrix:
        base: [.]
        directory: ${{ fromJson(needs.gather-metadata.outputs.list_base) }}
    uses: ./.github/workflows/build-dir-2.yaml
    secrets: inherit
    with:
      directory: ${{ matrix.directory }}
      tag_prefix: ${{ needs.gather-metadata.outputs.tag_prefix }}

  build-non-base:
    needs: [gather-metadata, build-base]
    if: |
      always() &&
      needs.gather-metadata.outputs.is_image == 'false' &&
      (needs.gather-metadata.outputs.list_base == '[]' || needs.build-base.result == 'success')
    strategy:
      fail-fast: false
      matrix:
        base: [.]
        directory: ${{ fromJson(needs.gather-metadata.outputs.list_baseless) }}
    uses: ./.github/workflows/build-dir-2.yaml
    secrets: inherit
    with:
      directory: ${{ matrix.directory }}
      tag_prefix: ${{ needs.gather-metadata.outputs.tag_prefix }}

  build-image:
    needs: gather-metadata
    if: needs.gather-metadata.outputs.is_image == 'true'
    strategy:
      fail-fast: false
      matrix:
        directory: [.]
        variant: ${{ fromJson(needs.gather-metadata.outputs.list) }}
    runs-on: "${{ contains(matrix.variant, 'arm64') && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/build-image
        with:
          directory: .
          variant: ${{ matrix.variant }}
          tag_prefix: ${{ needs.gather-metadata.outputs.tag_prefix }}
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
